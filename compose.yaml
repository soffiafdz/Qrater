version: '3.5'

services:
  flask:
    build: .
    restart: always
    secrets:
      - db-password
      - mail-password
    volumes:
      - ./uploaded_datasets:/home/qrater/app/static/datasets/uploaded
      - ./datasets:/home/qrater/app/static/datasets/preloaded
      # Extra volumes in compose.override.yaml
    env_file:
      - qrater.env
    ports:
      - 8080:5000
    networks:
      - dbnet
      - redisnet
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: mysql:8.0.25
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - dbnet
    environment:
      - MYSQL_DATABASE=qrater
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 3306
      - 33060

  redis:
    image: redis:6.2.4-alpine
    restart: always
    networks:
      - redisnet
    expose:
      - 6379

  worker:
    build: .
    entrypoint:
      - env/bin/rq
      - worker
      - --url
      - redis://redis:6379/0
      - qrater-tasks
    restart: always
    secrets:
      - db-password
      - mail-password
    volumes_from:
      - flask
    env_file:
      - qrater.env
    networks:
      - dbnet
      - redisnet
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  db-data:

secrets:
  db-password:
    file: db-password.txt
  mail-password:
    file: mail-password.txt

networks:
  dbnet: {}
  redisnet: {}
